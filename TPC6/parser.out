Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> op
Rule 1     op -> express
Rule 2     op -> op ADD calc
Rule 3     op -> op SUB calc
Rule 4     calc -> NUMBER
Rule 5     calc -> calc MUL NUMBER
Rule 6     calc -> calc DIV NUMBER
Rule 7     express -> NUMBER
Rule 8     express -> AP op FP

Terminals, with rules where they appear

ADD                  : 2
AP                   : 8
DIV                  : 6
FP                   : 8
MUL                  : 5
NUMBER               : 4 5 6 7
SUB                  : 3
error                : 

Nonterminals, with rules where they appear

calc                 : 2 3 5 6
express              : 1
op                   : 2 3 8 0

Parsing method: LALR

state 0

    (0) S' -> . op
    (1) op -> . express
    (2) op -> . op ADD calc
    (3) op -> . op SUB calc
    (7) express -> . NUMBER
    (8) express -> . AP op FP

    NUMBER          shift and go to state 3
    AP              shift and go to state 4

    op                             shift and go to state 1
    express                        shift and go to state 2

state 1

    (0) S' -> op .
    (2) op -> op . ADD calc
    (3) op -> op . SUB calc

    ADD             shift and go to state 5
    SUB             shift and go to state 6


state 2

    (1) op -> express .

    ADD             reduce using rule 1 (op -> express .)
    SUB             reduce using rule 1 (op -> express .)
    $end            reduce using rule 1 (op -> express .)
    FP              reduce using rule 1 (op -> express .)


state 3

    (7) express -> NUMBER .

    ADD             reduce using rule 7 (express -> NUMBER .)
    SUB             reduce using rule 7 (express -> NUMBER .)
    $end            reduce using rule 7 (express -> NUMBER .)
    FP              reduce using rule 7 (express -> NUMBER .)


state 4

    (8) express -> AP . op FP
    (1) op -> . express
    (2) op -> . op ADD calc
    (3) op -> . op SUB calc
    (7) express -> . NUMBER
    (8) express -> . AP op FP

    NUMBER          shift and go to state 3
    AP              shift and go to state 4

    op                             shift and go to state 7
    express                        shift and go to state 2

state 5

    (2) op -> op ADD . calc
    (4) calc -> . NUMBER
    (5) calc -> . calc MUL NUMBER
    (6) calc -> . calc DIV NUMBER

    NUMBER          shift and go to state 9

    calc                           shift and go to state 8

state 6

    (3) op -> op SUB . calc
    (4) calc -> . NUMBER
    (5) calc -> . calc MUL NUMBER
    (6) calc -> . calc DIV NUMBER

    NUMBER          shift and go to state 9

    calc                           shift and go to state 10

state 7

    (8) express -> AP op . FP
    (2) op -> op . ADD calc
    (3) op -> op . SUB calc

    FP              shift and go to state 11
    ADD             shift and go to state 5
    SUB             shift and go to state 6


state 8

    (2) op -> op ADD calc .
    (5) calc -> calc . MUL NUMBER
    (6) calc -> calc . DIV NUMBER

    ADD             reduce using rule 2 (op -> op ADD calc .)
    SUB             reduce using rule 2 (op -> op ADD calc .)
    $end            reduce using rule 2 (op -> op ADD calc .)
    FP              reduce using rule 2 (op -> op ADD calc .)
    MUL             shift and go to state 12
    DIV             shift and go to state 13


state 9

    (4) calc -> NUMBER .

    MUL             reduce using rule 4 (calc -> NUMBER .)
    DIV             reduce using rule 4 (calc -> NUMBER .)
    ADD             reduce using rule 4 (calc -> NUMBER .)
    SUB             reduce using rule 4 (calc -> NUMBER .)
    $end            reduce using rule 4 (calc -> NUMBER .)
    FP              reduce using rule 4 (calc -> NUMBER .)


state 10

    (3) op -> op SUB calc .
    (5) calc -> calc . MUL NUMBER
    (6) calc -> calc . DIV NUMBER

    ADD             reduce using rule 3 (op -> op SUB calc .)
    SUB             reduce using rule 3 (op -> op SUB calc .)
    $end            reduce using rule 3 (op -> op SUB calc .)
    FP              reduce using rule 3 (op -> op SUB calc .)
    MUL             shift and go to state 12
    DIV             shift and go to state 13


state 11

    (8) express -> AP op FP .

    ADD             reduce using rule 8 (express -> AP op FP .)
    SUB             reduce using rule 8 (express -> AP op FP .)
    $end            reduce using rule 8 (express -> AP op FP .)
    FP              reduce using rule 8 (express -> AP op FP .)


state 12

    (5) calc -> calc MUL . NUMBER

    NUMBER          shift and go to state 14


state 13

    (6) calc -> calc DIV . NUMBER

    NUMBER          shift and go to state 15


state 14

    (5) calc -> calc MUL NUMBER .

    MUL             reduce using rule 5 (calc -> calc MUL NUMBER .)
    DIV             reduce using rule 5 (calc -> calc MUL NUMBER .)
    ADD             reduce using rule 5 (calc -> calc MUL NUMBER .)
    SUB             reduce using rule 5 (calc -> calc MUL NUMBER .)
    $end            reduce using rule 5 (calc -> calc MUL NUMBER .)
    FP              reduce using rule 5 (calc -> calc MUL NUMBER .)


state 15

    (6) calc -> calc DIV NUMBER .

    MUL             reduce using rule 6 (calc -> calc DIV NUMBER .)
    DIV             reduce using rule 6 (calc -> calc DIV NUMBER .)
    ADD             reduce using rule 6 (calc -> calc DIV NUMBER .)
    SUB             reduce using rule 6 (calc -> calc DIV NUMBER .)
    $end            reduce using rule 6 (calc -> calc DIV NUMBER .)
    FP              reduce using rule 6 (calc -> calc DIV NUMBER .)

